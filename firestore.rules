rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isTeacher() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
      
      // User progress
      match /progress/{progressId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Lessons
    match /lessons/{lessonId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && (isTeacher() || isAdmin());
      
      // Lesson materials
      match /materials/{materialId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && (isTeacher() || isAdmin());
      }
    }

    // Teaching sessions
    match /sessions/{sessionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isTeacher();
      allow update: if isAuthenticated() && (
        isTeacher() || 
        exists(/databases/$(database)/documents/sessions/$(sessionId)/participants/$(request.auth.uid))
      );
      allow delete: if isAuthenticated() && isTeacher();
      
      // Session participants
      match /participants/{participantId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && (isTeacher() || isOwner(participantId));
      }
      
      // Session chat
      match /chat/{messageId} {
        allow read: if isAuthenticated() && (
          isTeacher() || 
          exists(/databases/$(database)/documents/sessions/$(sessionId)/participants/$(request.auth.uid))
        );
        allow create: if isAuthenticated() && (
          isTeacher() || 
          exists(/databases/$(database)/documents/sessions/$(sessionId)/participants/$(request.auth.uid))
        );
        allow update, delete: if isAuthenticated() && (
          isTeacher() || 
          request.auth.uid == resource.data.senderId
        );
      }
    }

    // Bookings
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() && (
        isTeacher() || 
        request.auth.uid == resource.data.studentId
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        isTeacher() || 
        request.auth.uid == resource.data.studentId
      );
      allow delete: if isAdmin();
    }

    // Questions and answers
    match /questions/{questionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.studentId || 
        isTeacher()
      );
      allow delete: if isAdmin();
      
      // Answers
      match /answers/{answerId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() && isTeacher();
        allow update: if isAuthenticated() && (
          request.auth.uid == resource.data.teacherId || 
          isAdmin()
        );
        allow delete: if isAdmin();
      }
    }

    // Notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && (isTeacher() || isAdmin());
      allow update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow delete: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        isAdmin()
      );
    }

    // Resources
    match /resources/{resourceId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && (isTeacher() || isAdmin());
    }
  }
}
